name: build

on:
  push:
    branches:
    tags:
#  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt' # See 'Supported distributions' for available options
          java-version: '16'

      - name: checkout
        uses: actions/checkout@v2

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: build and test
        run: mvn -B package --file pom.xml

      - name: set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: build and deploy master image to ghcr.io and dockerhub
        if: ${{ github.ref == 'refs/heads/master' }}
        env:
          GITHUB_PACKAGE_TOKEN: ${{ secrets.PKG_TOKEN }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
          USERNAME: ${{ github.actor }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
          echo GITHUB_REF - $ref
          echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
          echo ${DOCKER_HUB_TOKEN} | docker login -u ${USERNAME} --password-stdin
          docker buildx build --push \
              --build-arg CI=github --build-arg GITHUB_SHA=${GITHUB_SHA} --build-arg GIT_BRANCH=${ref} \
              --platform linux/amd64 \
              -t ghcr.io/${USERNAME}/ruchi:${ref} -t ${USERNAME}/ruchi:${ref} .

      - name: deploy tagged (latest) to ghcr.io and dockerhub
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_PACKAGE_TOKEN: ${{ secrets.PKG_TOKEN }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
          USERNAME: ${{ github.actor }}
          GITHUB_SHA: ${{ github.sha}}
          GITHUB_REF: ${{ github.ref}}
        run: |
          ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
          echo GITHUB_REF - $ref
          echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
          echo ${DOCKER_HUB_TOKEN} | docker login -u ${USERNAME} --password-stdin
          docker buildx build --push \
              --build-arg CI=github --build-arg GITHUB_SHA=${GITHUB_SHA} --build-arg GIT_BRANCH=${ref} \
              --platform linux/amd64 \
              -t ghcr.io/${USERNAME}/ruchi:${ref} -t ${USERNAME}/ruchi:${ref} .

      - name: ssh-to-server
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: appleboy/ssh-action@master
        env:
          GIT_REPO: ${{ github.repository }}
          GIT_REPO_NAME: ${{ github.event.repository.name }}
          GIT_SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          envs: GIT_REPO,GIT_SHA,GIT_REPO_NAME
          script: |
            rm -rf ~/projects/$GIT_REPO_NAME
            cd ~/projects
            git clone git@github.com:$GIT_REPO.git
            cd ~/projects/$GIT_REPO_NAME
            git checkout -q -d $GIT_SHA
            cp ~/projects/$GIT_REPO_NAME.env ./.env
            docker-compose down --remove-orphans
            docker-compose up --detach --no-color --quiet-pull --force-recreate --renew-anon-volumes --remove-orphans
